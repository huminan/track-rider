C51 COMPILER V9.52.0.0   GPS                                                               02/09/2018 16:03:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE GPS
OBJECT MODULE PLACED IN gps.OBJ
COMPILER INVOKED BY: D:\Software\Development\Hardware\Coder\Keli 51\c51v952\C51\BIN\C51.EXE gps.c LARGE BROWSE DEBUG OBJ
                    -ECTEXTEND TABS(2)

line level    source

   1          #include "sys.h"
   2          
   3          char latitude[LATITUDE];
   4          char longitude[LONGITUDE];
   5          
   6          bit start_cnt = 0;
   7          bit start_record = 0;
   8          uchar done_record = 0;  // 0: haven't record
   9                                  // 1: record done
  10                                  // 2: error
  11          
  12          char rcv_gps[MAXRCV];
  13          uchar GpsRcvCnt = 0;
  14          
  15          /************串行口1 GPS中断处理函数*************/
  16          void UART_1Interrupt(void) interrupt 4
  17          {
  18   1          char tmp = 0;
  19   1          P0_1 = 1;
  20   1              if(RI)
  21   1              {
  22   2                  ES=0; //关闭串行口中断
  23   2                  RI=0; //接收中断信号清零，继续接收
  24   2                  tmp=SBUF;
  25   2      // 2nd
  26   2                  if(start_cnt) // 开始判断是否是GPGLL指令
  27   2                  {
  28   3                      GpsRcvCnt++;
  29   3                      if(GpsRcvCnt == 6)
  30   3                      {   
  31   4                          if(tmp == 'L')     // 若是GPGLL指令，就开始记录
  32   4                          {
  33   5                              start_record = 1;
  34   5                              start_cnt = 0;
  35   5                              GpsRcvCnt = 0;
  36   5                          }
  37   4                          else {             // 若不是GPGLL指令
  38   5                              start_cnt = 0; // 等待下一个'$'出现
  39   5                              GpsRcvCnt = 0;
  40   5                            
  41   5                              // recive wrong
  42   5                              // 亮红灯
  43   5                              P0_1 = 1;
  44   5                          }
  45   4                      }
  46   3                  }
  47   2      // 1st
  48   2                  else if(tmp == '$')
  49   2                  {
  50   3                      if(!start_record) {   // 若是第一次见到'$'，开始数数
  51   4                          start_cnt = 1;
  52   4                          GpsRcvCnt++;
  53   4                      }
  54   3                      else {                // 若不是第一次见到'$'，说明已经读完数据
C51 COMPILER V9.52.0.0   GPS                                                               02/09/2018 16:03:50 PAGE 2   

  55   4                          done_record = 1;
  56   4                          start_record = 0;
  57   4                          // GpsRcvCnt在外面进行判断是否有效数据，并清零
  58   4                      }
  59   3                  }
  60   2      // 3rd
  61   2                  if(start_record)  //开始记录数据
  62   2                  {
  63   3                      rcv_gps[GpsRcvCnt] = tmp;
  64   3                      GpsRcvCnt++;
  65   3                      
  66   3                      if(GpsRcvCnt > MAXRCV)  // too much info
  67   3                      {
  68   4                          GpsRcvCnt = 0;
  69   4                          start_record = 0;
  70   4                          done_record = 2;    // error
  71   4                      }
  72   3                  }
  73   2                  ES=1;
  74   2              }
  75   1      }
  76          
  77          
  78          void Record_Gps()
  79          {
  80   1          P0_1 = 0;
  81   1          P0_3 = 0;
  82   1          REN = 1;  //允许接收数据
  83   1          ES = 1;   //打开串口1接收中断
  84   1          while(!done_record);    // 一直等待接收中断函数中处理完数据
  85   1          P0_1 = 0; // test
  86   1          REN = 0;  //禁止接收数据
  87   1          ES = 0;   //关闭串口1接收中断
  88   1          if(done_record == 1)
  89   1          {
  90   2              if(GpsRcvCnt < 20) // 说明没有信号
  91   2              {
  92   3                  // 亮黄灯
  93   3                  P0_3 = 1;
  94   3              }
  95   2              else    //有信号，进行拆解
  96   2              {
  97   3                  uchar posx1,posx2;
  98   3                  // double lati, longi;
  99   3                  if(Locate_Pos(rcv_gps, 1)==2) // 第2个一定是逗号
 100   3                  {
 101   4                      posx1 = 2;
 102   4                      posx2 = Locate_Pos(rcv_gps, 2);
 103   4                      mid(latitude,rcv_gps, posx2-posx1-1,posx1); // 将第一个逗号和第二个逗号之间的值给lati数组
 104   4                    
 105   4                      posx1 = Locate_Pos(rcv_gps, 3);
 106   4                      posx2 = Locate_Pos(rcv_gps, 4);
 107   4                      mid(longitude,rcv_gps, posx2-posx1-1,posx1);// 将第三个逗号和第四个逗号之间的值给longi数组
 108   4                      
 109   4                      //向服务器发送数据
 110   4                      Uart2SendStr("AT+CIPSEND\r");
 111   4                      DelaySec(1);
 112   4                    
 113   4                      //格式："A2,1255.12001,12322.54000"
 114   4                      UART_2SendOneByte('A');
 115   4                      UART_2SendOneByte(DEVICEID);
 116   4                      UART_2SendOneByte(',');
C51 COMPILER V9.52.0.0   GPS                                                               02/09/2018 16:03:50 PAGE 3   

 117   4      
 118   4                      Uart2SendStr(latitude);
 119   4                      UART_2SendOneByte(',');
 120   4                      Uart2SendStr(longitude);
 121   4      
 122   4                      CleanSimRcv();//清除接收缓存
 123   4                    
 124   4                  }
 125   3                  else
 126   3                  {
 127   4                      // recive wrong
 128   4                      // 亮红灯
 129   4                      P0_1 = 1;
 130   4                  }
 131   3              }
 132   2          }
 133   1          else if(done_record == 2)
 134   1          {
 135   2              // something wrong
 136   2              // 亮红灯
 137   2              // P0_1 = 1;
 138   2          }
 139   1          else{   //done_record = 0
 140   2              // something wrong
 141   2              // 亮红灯
 142   2              // P0_1 = 1;
 143   2          }
 144   1          done_record = 0;
 145   1          CleanGpsRcv();// 清除接收缓存
 146   1      }
 147          
 148          /*从字符串的中间截取n个字符*/
 149          char * mid(char *dst,char *src, int n,int m) /*n为长度，m为位置*/
 150          {
 151   1          char *p = src;
 152   1          char *q = dst;
 153   1          int len = strlen(src);
 154   1          if(n>len) n = len-m;    /*从第m个到最后*/
 155   1          if(m<0) m=0;    /*从第一个开始*/
 156   1          if(m>len) return NULL;
 157   1          p += m;
 158   1          while(n--) *(q++) = *(p++);
 159   1          *(q++)='\0'; /*有必要吗？很有必要*/
 160   1          return dst;
 161   1      }
 162          
 163          //从buf里面得到第cx个逗号所在的位置，从1开始算
 164          //返回值:1~0XFE,代表逗号所在位置的偏移，也从1开始算
 165          //       0XFF,代表不存在第cx个逗号                
 166          char Locate_Pos(char *buf,char cx)
 167          {         
 168   1        char *p=buf;
 169   1        while(cx)
 170   1        {    
 171   2          if(*buf=='*'||*buf<' '||*buf>'z')return 0XFF;//遇到'*'或者非法字符,则不存在第cx个逗号
 172   2          if(*buf==',')cx--;
 173   2          buf++;
 174   2        }
 175   1        return buf-p;  
 176   1      }
 177          
 178          
C51 COMPILER V9.52.0.0   GPS                                                               02/09/2018 16:03:50 PAGE 4   

 179          /***************************GPRS接收缓冲数据初始化函数***************/
 180          /*函数原型:void CleanGsmRcv(void)
 181          /*函数功能:将GsmRcv[]数据清除，并且使缓冲指针移到第一位。
 182          /*输入参数:无
 183          /*输出参数:无
 184          /********************************************************************/
 185          void CleanGpsRcv(void)
 186          {
 187   1        uchar i = 0;
 188   1        for(i=0; i<=MAXRCV; i++)
 189   1        {
 190   2          rcv_gps[i] = 0; 
 191   2        }
 192   1      
 193   1        GpsRcvCnt = 0;  
 194   1      }
 195          
 196          
 197          
 198          
 199          
 200          
 201          char Send_ATComm(const char *comm, const char *ret, uchar delay, bit wait)
 202          {
 203   1          uchar i;
 204   1          for(i = 0;i<delay;i++)
 205   1          {
 206   2              if(!wait)
 207   2                  Uart2SendStr(comm); 
 208   2              DelaySec(1);
 209   2              if(Hand(ret)) //Match
 210   2              {
 211   3                  CleanGpsRcv();
 212   3                  return 1;
 213   3              }
 214   2          }
 215   1          CleanGpsRcv();
 216   1          return 0;
 217   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    874    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =     95      32
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
